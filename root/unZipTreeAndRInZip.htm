<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>unZipTreeAndRInZip</title>
<link type="text/css" rel="stylesheet" href="RFunk.css">
</head>
<body>
<h1>unZipTreeAndRInZip</h1>
<code><b>mixed</b> unZipTreeAndRInZip( <b>string</b> root_dir  [, <b>bool</b> del_first_zip ])</code>
<h2>Description</h2>
Cette méthode dézippe une arborescence plus chaque zips qui seraient contenus dans le zip de départ !.<br />
Elle est donc <b>la seule méthode récursive de la classe qui appelle une autre méthode récursive</b> !!!
<br />
<br />
Le booléen indique  si vous voulez supprimer le premier zip de départ ou le conservez.
<br />
Une limite à 10 mo par fichier à dézipper est fixée par défaut (Vous pouvez l'augmentez à vos risques et périls).
<br />
La méthode renvoi faux si <u>aucun zips inférieurs à 10 mo n'a été trouvé</u> ou un tableau multidimensionnel en fonction des excéptions gérées.<br /><br />
<br>
Par défaut les zips sont extraits à coté du script qui appelle lé méthode, dans un dossier appelé "unZip".

<h2>Exemple</h2>
<div class="doc-source">
<pre><code>
$o_rfunk= new RFunk;

$m_retour=$o_rfunk->unZipTreeAndRInZip('C:\wamp\www\test', true);



if(is_array($m_retour))
{

	foreach($m_retour as $s_key => $a_value):
		
			if($s_key == 'ZIPS < 10 MO')
			{
			
				foreach($a_value as $i_key => $s_value):
				
					#### traitement que vous voulez faire ######
					
				endforeach;
			
			}elseif($s_key == 'ZIPS > 10 MO')
			{
				foreach($a_value as $i_key => $s_value):
				
					#### traitement que vous voulez faire ######
				
				endforeach;
			
			}
		endforeach;

}else{ echo 'Il n y avait aucun zips à partir de votre répertoire racine !'; }
</code></pre>
</div>


<h2>Voir</h2>

<a href="unZipFolders.htm">unZipFolders()</a>.
<hr style="margin-top:1.5em">
<div style="text-align:center"><a href="index.php">Index</a></div>
</body>
</html>
